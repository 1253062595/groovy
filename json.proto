syntax = "proto3";
import "base.proto";
package client;
option java_package = "com.jinhui365.crm.appserver.grpc.proto";
option java_multiple_files = false;
option java_outer_classname = "ClientProto";

service ClientRpc {
    rpc QueryClientList (ClientListReq) returns (ClientListRes) {} //客户列表，可根据关键字查询、分页
    rpc ChangeClientFocusState (ChangeFocusStateReq) returns (base.CommonRes) {} //添加/取消特别关注
    rpc QueryFocusClientList (base.Empty) returns (ClientListRes) {} //重点关注客户列表
    rpc QueryClientDetail (ClientReq) returns (ClientDetailRes) {} //客户详情
    rpc QueryClientNAsset (ClientReq) returns (ClientNAssetRes) {} //客户实时资产
    rpc QueryClientDealList (ClientQueryReq) returns (DealRes) {} //客户交易查询
    rpc QueryClientPositionList (ClientQueryReq) returns (PositionRes) {} //客户（资产）持仓查询
    rpc QueryClientProfitList (ClientQueryReq) returns (ProfitRes) {} //客户兑付收益查询
    rpc QueryClientTimeLine (ClientReq) returns (TimeLineRes) {} //客户时间轴查询
    rpc QueryClientCapitalList (ClientQueryReq) returns (CapitalRes) {} //客户资金查询
    rpc QueryClientMPositionList (ClientQueryReq) returns (MPositionRes) {} //客户月度持仓查询
    rpc QueryClientAttornList (ClientQueryReq) returns (AttornRes) {} //客户转让查询
    rpc QueryClientPurchaseList (ClientReq) returns (PurchaseRes) {} //客户累计购买查询
    rpc QueryClientCardList (ClientReq) returns (CardRes) {} //客户绑卡查询
    rpc QueryClientPRList (PRReq) returns (PRRes) {} //客户申赎金额与次数查询
}

enum TimeLineType {
    REGISTER = 0; //注册
    TIEDCARD = 1; //绑卡
    FIRST_DEAL = 2; //首次交易
    LATELY_DEAL = 3; //最近交易
    EMPTY = 4; //空时间节点
}

message ClientListReq {
    int32 page_no = 1;
    string keywords = 2;
}
message ClientListRes {
    message BaseClientInfo {
        string client_name = 1; //客户姓名
        string client_id = 2; //客户88号
        string client_level = 3; //客户等级
        string client_gender = 4; //性别
        string client_phone_num = 5; //手机号
        bool focus_client = 6; //是否重点关注
        string client_assets = 7; //改为当前总持仓（原客户总资产）
    }
    repeated BaseClientInfo data_list = 1;
}
message ClientReq {
    string client_id = 1; //客户id
}
message ChangeFocusStateReq {
    string client_id = 1; //客户id
    bool focus_client = 2; //是否重点关注
}
message ClientQueryReq {
    string client_id = 1; //客户id
    string start_time = 2; //开始时间
    string end_time = 3; //结束时间
    int32 page_no = 4;
}
message ClientDetailRes {

    ClientDetailInfo client_detail = 1;
    repeated AssetsDetail assets_detail = 2; //客户当前持仓构成

    message ClientDetailInfo {
        string broker_name = 1; //客户经纪人姓名
        string broker_type = 2; //经纪人类型
        string client_name = 3; //客户姓名
        string client_id = 4; //客户88号
        string client_level = 5; //客户等级
        string client_gender = 6; //性别
        string client_phone_num = 7; //手机号
        string client_org = 8; //客户渠道
        string client_birthday = 9; //客户生日
        string client_source = 10; //客户来源

    }
    message AssetsDetail {
        string product_name = 1; //产品名称
        string purchase_amount = 2; //持仓金额
    }

}
message ClientNAssetRes {
    string sum_asset = 1; //实时总资产
    string in_transit_asset = 2; //实时在途
    string balance_asset = 3; //实时余额
}
message DealRes {
    int32 deal_times = 1; //交易次数
    string sum_amount = 2; //交易总金额

    message DealDetail {
        string product_name = 1; //产品名称
        string bussiness_type = 2; //业务类型
        string deal_time = 3; //交易时间  yyyy-mm-dd hh:MM:ss
        string deal_amount = 4; //交易金额
    }
    repeated DealDetail data_list = 3;
}
message PositionRes {

    message PositionDetail {
        string product_name = 1; //产品名称
        string purchase_amount = 2; //持仓金额
        string purchase_share = 3; //持仓份额
        string product_code = 4; //产品代码
        string init_date = 5; //持仓时间
        string close_day = 6;
    }
    repeated PositionDetail data_list = 1;
}
message ProfitRes {

    message ProfitDetail {
        string profit_time = 1; //兑付时间
        string profit_type = 2; //分红类别
        string product_code = 3; //产品代码
        string product_lssuer = 4; //产品发行方
        string profit = 5; //收益金额
    }
    repeated ProfitDetail data_list = 1;
}
message TimeLineRes {

    message TimeLineDetail {
        int32 time_line_type = 1; //类型
        string time_line_time = 2; //发生时间
    }
    repeated TimeLineDetail data_list = 1;
}
message CapitalRes {

    message CapitalDetail {
        string product_name = 1; //产品名称
        string product_code = 2; //产品代码
        string bussiness_type = 3; //业务类型
        string date = 4; //时间
        string capital = 5; //金额
    }
    repeated CapitalDetail data_list = 1;
}
message MPositionRes {

    message MPositionDetail {
        string product_name = 1; //产品名称
        string product_code = 2; //产品代码
        string month_share = 3; //月末份额
        string month_amount = 4; //余额
        string date = 5; //持仓时间 yyyy-MM
    }
    repeated MPositionDetail data_list = 1;
}
message AttornRes {

    message AttornDetail {
        string product_name = 1; //产品名称
        string product_code = 2; //产品代码
        string bussiness_type = 3; //业务类型
        string attorn_date = 4; //时间
        string attorn_capital = 5; //转让金额
        string attorn_share = 6; //转让份额
    }
    repeated AttornDetail data_list = 1;
}
message PurchaseRes {

    message PurchaseDeatil {
        string product_type = 1; //产品类型
        string amount = 2; //购买金额
    }
    repeated PurchaseDeatil data_list = 1;
}
message CardRes {

    message CardDetail {
        string bank_name = 1; //支行名称
        string bank_no = 2;
        string card_code = 3; //卡号
        bool main_card = 4; //是否为主卡
        string date = 5; //绑卡日期
        string bank_img = 6; //银行图片地址
    }
    repeated CardDetail data_list = 1;
}
message PRReq {
    string client_id = 1;
    string start_time = 2; //查询时间
    bool with_hb = 3; //是否包含活宝
    int32 page_no = 4;
}
message PRRes {

    message PRDetail {
        string time = 1; //时间
        string purchase_times = 2; //申购次数
        string purchase_amount = 3; //申购金额
        string redemption_times = 4; //赎回次数
        string redemption_amount = 5; //赎回金额
    }
    repeated PRDetail data_list = 1;
}

var rule = "";  //编写proto文件的规则

var protos = [{
    package:"packageName", // package关键字不能做属性名使用
    services:[
        {
            service:"serviceName",
            path:"packageName/serviceName"
            describe:"serviceDescribe",
            reqMessage:{
                message:"messageName",
                props:[
                    {
                        property:"propName",
                        type:"propType",     //string,int32,array,message...
                        describe:"propertyDescribe",
                        props:[
                            {
                                property:"propName",
                                type:"propType",     //string,int32,array,message...
                                describe:"propertyDescribe",

                            }
                        ]
                    }
                ]
            },
            resMessage:{
                message:"messageName",
                props:[
                    {
                        property:"propName",
                        type:"propType",     //string,int32,array,message...
                        describe:"propertyDescribe",
                        props:[
                            {
                                property:"propName",
                                type:"propType",     //string,int32,array,message...
                                describe:"propertyDescribe",
                                props:[          //type===message的时候才有数据
                                    {
                                        property:"propName",
                                        type:"propType",     //string,int32,array,message...
                                        describe:"propertyDescribe",
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
        }
    ]

}];


